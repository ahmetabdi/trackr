
version: '2.1'
services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "3000:3000"
    command: ./bin/rails s -p 3000 -b '0.0.0.0'
    depends_on:
      - database
      - redis
      - elasticsearch
      - maildev
      - logstash

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.2.2
    volumes:
      - ./.elasticsearch.yml:/usr/share/kibana/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ['CMD', 'curl', '-f', '-u', 'elastic:changeme', 'http://localhost:9200']

  kibana:
    image: docker.elastic.co/kibana/kibana:5.2.2
    ports:
      - "5601:5601"
    volumes:
      - ./.kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on: {elasticsearch: {condition: service_healthy}}
    # Check that Kibana is responding before loading dashboards etc.
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:5601/login']

  logstash:
    image: docker.elastic.co/logstash/logstash:5.2.2
    volumes:
      - ./.logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    depends_on: {elasticsearch: {condition: service_healthy}}

  database:
    image: postgres:9.6.2
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: trackr_development

  redis:
    image: redis:3.0-alpine
    ports:
      - "6379:6379"

  maildev:
    image: djfarrelly/maildev
    ports:
      - "1080:80"
      - "1025:25"

  # sidekiq:
  #   build:
  #     context: .
  #   volumes:
  #     - .:/app
  #   command: sidekiq
  #   depends_on:
  #     - redis
